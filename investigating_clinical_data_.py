# -*- coding: utf-8 -*-
"""Investigating clinical data .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lJ6UGabPdIJ2LcoZpcmoep639clot1kv
"""

import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

path = '/content/drive/MyDrive/college analysis/investigating clinical data.csv'

data = pd.read_csv(path)

data.head()

data.tail()

#  to show the no. rows and columns
data.shape

# to show the total number of (elements) in the dataset
data.size

#to show the each column name
data.columns

# to show the data type of the each column
data.dtypes

# to show indexes , columns , data-types of each columns , memory at once
data.info()

"""#  Is there any duplicate records in this dataset? if yes then remove the duplicate records"""

data.head()

data.shape

data.duplicated()

data[data.duplicated()]  #now by doing this it only show the duplicated rows of the dataset

data.drop_duplicates(inplace=True)   # withy the help of this command duplicated values row permanently deleted

data[data.duplicated()]    #now checking wheather duplicated recoreds are being deleted or not

data.shape

"""#Is there any null value present in any column """

data.isnull()

data.isnull().sum()

sns.heatmap(data.isnull())

data['AppointmentDay'] = pd.to_datetime(data['AppointmentDay'])

data.describe()

Hipertension = data['Hipertension']
Diabetes = data['Diabetes']
Alcoholism = data['Alcoholism']
Handcap = data['Handcap']

sum_Hipertension = Hipertension.sum()
sum_Diabetes = Diabetes.sum()
sum_Alcoholism = Alcoholism.sum()
sum_Handcap = Handcap.sum()

labels = ['Hipertension', 'Diabetes', 'Alcoholism', 'Handcap']
values = [sum_Hipertension, sum_Diabetes , sum_Alcoholism , sum_Handcap]

plt.pie(values, labels=labels, autopct='%1.1f%%')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.
plt.title('Comparison of Disease')
plt.show()

# The above pie chart represents the data of diseses as it represents the highest number of diseases is hipertension , second highest is diabetes , third highest is alcoholism and then come the handcap is the least one the pie chart

gender_counts = data['Gender'].value_counts()
gender_counts.plot(kind='bar')
plt.title('Number of Males and Females')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()

# In the above bar graph we can see that females are twice as we compare them to men the number of female almost cover approx 70000 and male patients only covers approx 38000

age_bins = [0, 18, 30, 45, 60, float('inf')]  # Define the age group boundaries
age_labels = ['0-18', '19-30', '31-45', '46-60', '60+']  # Define the age group labels
data['Age'] = pd.cut(data['Age'], bins=age_bins, labels=age_labels, right=False)
age_group_counts = data['Age'].value_counts()

age_group_counts.sort_index().plot(kind='bar')
plt.title('Number of People in Different Age Groups')
plt.xlabel('Age Group')
plt.ylabel('Count')
plt.show()

# This graph  represents patients who are visiting the clinic about their age it reprents the group of patients like the patients between the age of 0-18 are visiting the clinic most of the times

data.head()

neighborhood_counts = data['Neighbourhood'].value_counts().sort_index()

sns.lineplot(x=neighborhood_counts.index, y=neighborhood_counts.values, marker='o')

plt.title('Number of Occurrences in Each Neighborhood')
plt.xlabel('Neighborhood')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.xlabel('Neighborhood', fontsize=12)
plt.ylabel('Count', fontsize=12)
plt.xticks(rotation=90, fontsize=5)
plt.yticks(fontsize=5)
plt.show()

# as in the above line graph we can see that occurace of patients from the neighborhood

